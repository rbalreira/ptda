/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiuser;

import connection.Conexao;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userordinario.HistoricoDados;

/**
 *
 * @author danie
 */
public class Historico extends javax.swing.JFrame {

    Conexao connect = new Conexao();
    private Login l;
    
    /**
     * 
     * @param l 
     */
    public Historico(Login l) {
        initComponents();
        this.l = l;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableHistorico = new javax.swing.JTable();
        jButtonVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTableHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rua", "Código Postal", "Preço", "Data de Inicio", "Inicio de Estacionamento", "Data de Fim", "Fim de Estacionamento"
            }
        ));
        jScrollPane2.setViewportView(jTableHistorico);
        if (jTableHistorico.getColumnModel().getColumnCount() > 0) {
            jTableHistorico.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTableHistorico.getColumnModel().getColumn(2).setPreferredWidth(5);
            jTableHistorico.getColumnModel().getColumn(3).setPreferredWidth(2);
            jTableHistorico.getColumnModel().getColumn(4).setPreferredWidth(2);
            jTableHistorico.getColumnModel().getColumn(5).setPreferredWidth(2);
            jTableHistorico.getColumnModel().getColumn(6).setPreferredWidth(2);
        }

        jButtonVoltar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
    *método que, ao abrir a janela, vai apresentar os dados
    *relativos à vista historicopagamento
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ArrayList<HistoricoDados> lista = historico();
        DefaultTableModel model = (DefaultTableModel) jTableHistorico.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < lista.size(); i++) {
            row[0] = lista.get(i).getRua();
            row[1] = lista.get(i).getCodpostal();
            row[2] = lista.get(i).getValor();
            row[3] = lista.get(i).getDatainicio();
            row[4] = lista.get(i).getTempoinicio();
            row[5] = lista.get(i).getDatafim();
            row[6] = lista.get(i).getTempofim();

            model.addRow(row);
        }
    }//GEN-LAST:event_formWindowOpened

    /*
    *método para sair da janela Histórico e regressar à janela MainPage
     */
    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        MainPage main;
        try {
            main = new MainPage(l);
            main.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Historico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    /*
    *método criado para poder ir buscar à base de dados
    *os dados necessários para realizar o objetivo da página
     */
    public ArrayList<HistoricoDados> historico() {
        ArrayList<HistoricoDados> listaHistorico = new ArrayList<>();
        String sql = "SELECT rua, codpostal, valor, datainicio, tempoinicio, "
                + " datafim, tempofim FROM historicopagamento";

        try {
            Connection conn = connect.connect();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            HistoricoDados historico;

            while (rs.next()) {
                historico = new HistoricoDados(rs.getTime("tempoinicio"), rs.getTime("tempofim"), rs.getDate("datainicio"), rs.getDate("datafim"), rs.getString("rua"), rs.getString("codpostal"), rs.getFloat("valor"));
                listaHistorico.add(historico);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JPanel(), "Erro!", "Mensagem", JOptionPane.ERROR_MESSAGE);
        }

        return listaHistorico;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableHistorico;
    // End of variables declaration//GEN-END:variables
}
