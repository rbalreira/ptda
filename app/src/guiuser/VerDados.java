/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiuser;

import checkdata.CheckData;
import com.sun.glass.events.KeyEvent;
import hashdata.HashData;
import java.awt.Color;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import userordinario.PerfilUser;
import userordinario.UserOrdinario;

/**
 *
 * @author Daniel
 * @author Balreira 12 Jan 2019
 */
public class VerDados extends javax.swing.JFrame {
    
    Registo r = new Registo();
    UserOrdinario u = new UserOrdinario();
    PerfilUser p = new PerfilUser();
    CheckData c = new CheckData();
    HashData h = new HashData();
    private Login l;
    private boolean iban = false, tele = false, pass = false;
    
    public VerDados(Login l) throws SQLException, NoSuchAlgorithmException, InvalidKeySpecException{
        initComponents();
        this.l = l;
        generateFields();
        disableFields();
    }
    
    public VerDados(){
    }
    
    private void disableFields(){
        Nome.setEditable(false);
        DataNasc.setEditable(false);
        Morada.setEditable(false);
        CodPostal.setEditable(false);
        Email.setEditable(false);
        Iban.setEditable(false);
        BoxMetodoPag.setEnabled(false);
        Telemovel.setEditable(false);
        Pass.setEditable(false);
        Update.setEnabled(false);
    }
    
    private void generateFields() throws SQLException, NoSuchAlgorithmException, InvalidKeySpecException{
        u.getDadosPerfil(l.getUs(), p);
        Nome.setText(p.getNome()); DataNasc.setText(p.getDataNasc());
        Morada.setText(p.getMorada()); CodPostal.setText(p.getCodPostal());
        Email.setText(p.getEmail()); Iban.setText("******"); 
        BoxMetodoPag.setSelectedItem(u.getMetodoPag(p.getMetodopag())); Telemovel.setText("******");
        Pass.setText("******");
    }
    
    public boolean checkUpdate(JTextField x){
        return x.getBackground() == Color.red || x.getForeground() == Color.red;
    }
    
    public void invalidUpdate(){
        JOptionPane.showMessageDialog(null, "O campo é inválido!", "Campo inválido", JOptionPane.ERROR_MESSAGE);
    }
    
    public boolean checkSameField(String x, String p){
        return x.equals(p);
    }
    
    private void showSameFieldMsg(){
        JOptionPane.showMessageDialog(null, "O campo não foi alterado", "INFORMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void showSuccessUpdate(){
        JOptionPane.showMessageDialog(null, "O campo foi atualizado com sucesso!","INFORMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Nome = new javax.swing.JTextField();
        DataNasc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CodPostal = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Morada = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Telemovel = new javax.swing.JTextField();
        Update = new javax.swing.JButton();
        Return = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        BoxMetodoPag = new javax.swing.JComboBox<>();
        Iban = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Pass = new javax.swing.JPasswordField();
        EditNome = new javax.swing.JButton();
        EditMorada = new javax.swing.JButton();
        EditCodpostal = new javax.swing.JButton();
        EditEmail = new javax.swing.JButton();
        EditIban = new javax.swing.JButton();
        EditMetodoPag = new javax.swing.JButton();
        EditTele = new javax.swing.JButton();
        EditPass = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seu Perfil");

        Nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NomeFocusLost(evt);
            }
        });
        Nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NomeKeyPressed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jLabel3.setText("Data de nascimento:");

        jLabel4.setText("Código-postal:");

        CodPostal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CodPostalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CodPostalFocusLost(evt);
            }
        });
        CodPostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CodPostalKeyPressed(evt);
            }
        });

        Email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailFocusLost(evt);
            }
        });
        Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EmailKeyPressed(evt);
            }
        });

        jLabel5.setText("E-mail:");

        jLabel6.setText("Método de pagamento:");

        Morada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MoradaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                MoradaFocusLost(evt);
            }
        });
        Morada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MoradaKeyPressed(evt);
            }
        });

        jLabel7.setText("Morada:");

        jLabel8.setText("Telemóvel:");

        jLabel9.setText("Palavra-passe:");

        Telemovel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TelemovelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TelemovelFocusLost(evt);
            }
        });
        Telemovel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TelemovelKeyPressed(evt);
            }
        });

        Update.setText("Atualizar");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        Update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UpdateKeyPressed(evt);
            }
        });

        Return.setText("Voltar");
        Return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnActionPerformed(evt);
            }
        });
        Return.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ReturnKeyPressed(evt);
            }
        });

        Logout.setText("Terminar sessão");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        Logout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LogoutKeyPressed(evt);
            }
        });

        BoxMetodoPag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MultiBanco", "PayPal" }));
        BoxMetodoPag.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BoxMetodoPagFocusGained(evt);
            }
        });

        Iban.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IbanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IbanFocusLost(evt);
            }
        });
        Iban.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IbanKeyPressed(evt);
            }
        });

        jLabel10.setText("IBAN:");

        Pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PassFocusGained(evt);
            }
        });
        Pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PassKeyPressed(evt);
            }
        });

        EditNome.setText("Editar");
        EditNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditNomeActionPerformed(evt);
            }
        });
        EditNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditNomeKeyPressed(evt);
            }
        });

        EditMorada.setText("Editar");
        EditMorada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditMoradaActionPerformed(evt);
            }
        });
        EditMorada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditMoradaKeyPressed(evt);
            }
        });

        EditCodpostal.setText("Editar");
        EditCodpostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCodpostalActionPerformed(evt);
            }
        });
        EditCodpostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditCodpostalKeyPressed(evt);
            }
        });

        EditEmail.setText("Editar");
        EditEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditEmailActionPerformed(evt);
            }
        });
        EditEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditEmailKeyPressed(evt);
            }
        });

        EditIban.setText("Editar");
        EditIban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditIbanActionPerformed(evt);
            }
        });
        EditIban.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditIbanKeyPressed(evt);
            }
        });

        EditMetodoPag.setText("Editar");
        EditMetodoPag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditMetodoPagActionPerformed(evt);
            }
        });
        EditMetodoPag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditMetodoPagKeyPressed(evt);
            }
        });

        EditTele.setText("Editar");
        EditTele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditTeleActionPerformed(evt);
            }
        });
        EditTele.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditTeleKeyPressed(evt);
            }
        });

        EditPass.setText("Editar");
        EditPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPassActionPerformed(evt);
            }
        });
        EditPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditPassKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel7)))
                                    .addComponent(Return, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Iban, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(EditIban))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Telemovel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(EditTele))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Nome)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(EditNome))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(CodPostal, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(EditCodpostal)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(DataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel9))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(BoxMetodoPag, 0, 136, Short.MAX_VALUE)
                                                    .addComponent(Email, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                                    .addComponent(Pass, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addComponent(Morada))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EditMorada)
                                    .addComponent(EditEmail)
                                    .addComponent(EditMetodoPag)
                                    .addComponent(EditPass)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(252, 252, 252)
                                .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BoxMetodoPag, CodPostal, DataNasc, Email, Iban, Nome});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Logout, Return, Update});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(EditNome))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Morada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(EditMorada))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(CodPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditCodpostal))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Iban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(EditIban))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Telemovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(EditTele)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(EditEmail))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(BoxMetodoPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditMetodoPag))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(Pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditPass))))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Logout)
                    .addComponent(Return, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Logout, Return});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NomeFocusGained
        if(Nome.isEditable()) r.replaceText(evt, "Exemplo");
    }//GEN-LAST:event_NomeFocusGained

    private void NomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NomeFocusLost
        if(Nome.isEditable()) r.checkEmptyField(Nome);
    }//GEN-LAST:event_NomeFocusLost

    private void NomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NomeKeyPressed
        if(Nome.isEditable()) r.setColor(Nome);
    }//GEN-LAST:event_NomeKeyPressed

    private void MoradaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MoradaFocusGained
        if(Morada.isEditable()) r.replaceText(evt, "Rua...");
    }//GEN-LAST:event_MoradaFocusGained

    private void MoradaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MoradaFocusLost
        if(Morada.isEditable()) r.checkEmptyField(Morada);
    }//GEN-LAST:event_MoradaFocusLost

    private void MoradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MoradaKeyPressed
        if(Morada.isEditable()) r.setColor(Morada);
    }//GEN-LAST:event_MoradaKeyPressed

    private void CodPostalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodPostalFocusGained
        if(CodPostal.isEditable()) r.replaceText(evt, "1000-100");
    }//GEN-LAST:event_CodPostalFocusGained

    private void CodPostalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodPostalFocusLost
        if(CodPostal.isEditable()){
            JTextField cp = CodPostal;
            r.checkFormatter(cp, 8);
            if(!c.check_codPostal(cp.getText())) cp.setForeground(Color.red);
        }
    }//GEN-LAST:event_CodPostalFocusLost

    private void CodPostalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodPostalKeyPressed
        if(CodPostal.isEditable()){
            JTextField cp = CodPostal;
            r.setColor(cp);
            r.setFormatterCp(evt, cp);
            r.deleteText(evt, cp);
        }
    }//GEN-LAST:event_CodPostalKeyPressed

    private void EmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFocusGained
        if(Email.isEditable()) r.replaceText(evt, "exemplo@exemplo.pt");
    }//GEN-LAST:event_EmailFocusGained

    private void EmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFocusLost
        if(Email.isEditable()){
            JTextField e = Email;
            r.checkEmptyField(e);
            if(!c.check_email(e.getText())) e.setForeground(Color.red);
        }
    }//GEN-LAST:event_EmailFocusLost

    private void EmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailKeyPressed
        if(Email.isEditable()) r.setColor(Email);
    }//GEN-LAST:event_EmailKeyPressed

    private void IbanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IbanFocusGained
        if(Iban.isEditable()) r.replaceText(evt, "1234567890123456");
    }//GEN-LAST:event_IbanFocusGained

    private void IbanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IbanFocusLost
        if(Iban.isEditable()){
            JTextField i = Iban;
            r.checkFormatter(i, 16);
            if(!c.check_numMB(i.getText())) i.setForeground(Color.red);
        }
    }//GEN-LAST:event_IbanFocusLost

    private void IbanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IbanKeyPressed
        if(Iban.isEditable()) r.setColor(Iban);
        iban = true;
    }//GEN-LAST:event_IbanKeyPressed

    private void BoxMetodoPagFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BoxMetodoPagFocusGained
        if(BoxMetodoPag.isEnabled()) BoxMetodoPag.showPopup();
    }//GEN-LAST:event_BoxMetodoPagFocusGained

    private void TelemovelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TelemovelFocusGained
        if(Telemovel.isEditable()) r.replaceText(evt, "912302573");
    }//GEN-LAST:event_TelemovelFocusGained

    private void TelemovelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TelemovelFocusLost
        if(Telemovel.isEditable()){
            JTextField t = Telemovel;
            r.checkFormatter(t, 9);
            if(!c.check_telemovel(t.getText())) t.setForeground(Color.red);
        }
    }//GEN-LAST:event_TelemovelFocusLost

    private void TelemovelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TelemovelKeyPressed
        if(Telemovel.isEditable()) r.setColor(Telemovel);
        tele = true;
    }//GEN-LAST:event_TelemovelKeyPressed

    private void PassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PassFocusGained
        if(Pass.isEditable()) r.replaceText(evt, "12345678");
    }//GEN-LAST:event_PassFocusGained

    private void ReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnActionPerformed
        VerPerfil v = new VerPerfil(l);
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ReturnActionPerformed
    
    private void ReturnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ReturnKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) Return.doClick();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT) Logout.requestFocusInWindow();
    }//GEN-LAST:event_ReturnKeyPressed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        Login lo = new Login();
        lo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    private void LogoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LogoutKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) Logout.doClick();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT) Return.requestFocusInWindow();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT) Update.requestFocusInWindow();
    }//GEN-LAST:event_LogoutKeyPressed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        try {
            if(EditCodpostal.getText().equals("Anular")){
                if(checkUpdate(CodPostal) || !c.check_codPostal(CodPostal.getText())) invalidUpdate();
                else{
                    if(checkSameField(CodPostal.getText(), p.getCodPostal())) showSameFieldMsg();
                    else{
                        try {
                            u.updateCodPostal(CodPostal.getText(), l.getUs());
                            showSuccessUpdate();
                            EditCodpostal.setText("Editar");
                            CodPostal.setEditable(false);
                            EditMorada.setEnabled(true);
                            EditNome.setEnabled(true);
                            EditEmail.setEnabled(true);
                            EditIban.setEnabled(true);
                            EditMetodoPag.setEnabled(true);
                            EditTele.setEnabled(true);
                            EditPass.setEnabled(true);
                            Update.setEnabled(false);
                        } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                            Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            else{
            if(EditNome.getText().equals("Anular")){
                if(checkUpdate(Nome)) invalidUpdate();
                else{
                    if(checkSameField(Nome.getText(), p.getNome())) showSameFieldMsg();
                    else{
                        try {
                            u.updateNome(Nome.getText(), l.getUs());
                            showSuccessUpdate();
                            EditNome.setText("Editar");
                            Nome.setEditable(false);
                            EditMorada.setEnabled(true);
                            EditCodpostal.setEnabled(true);
                            EditEmail.setEnabled(true);
                            EditIban.setEnabled(true);
                            EditMetodoPag.setEnabled(true);
                            EditTele.setEnabled(true);
                            EditPass.setEnabled(true);
                            Update.setEnabled(false);
                        } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                            Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            else{
            
            if(EditEmail.getText().equals("Anular")){
                if(checkUpdate(Email) || !c.check_email(Email.getText())) invalidUpdate();
                else{
                    if(checkSameField(Email.getText(), p.getEmail())) showSameFieldMsg();
                    else{
                        try {
                            u.updateEmail(Email.getText(), l.getUs());
                            showSuccessUpdate();
                            EditEmail.setText("Editar");
                            Email.setEditable(false);
                            EditMorada.setEnabled(true);
                            EditCodpostal.setEnabled(true);
                            EditNome.setEnabled(true);
                            EditIban.setEnabled(true);
                            EditMetodoPag.setEnabled(true);
                            EditTele.setEnabled(true);
                            EditPass.setEnabled(true);
                            Update.setEnabled(false);
                        } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                            Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            else{
            if(EditIban.getText().equals("Anular")){
                try {
                    if(!iban || checkSameField(h.getHashData(Iban.getText()), p.getIban())) showSameFieldMsg();
                    else{
                        if(checkUpdate(Iban) || !c.check_numMB(Iban.getText())) invalidUpdate();
                        else{
                            try {
                                u.updateIban(Iban.getText(), l.getUs());
                                showSuccessUpdate();
                                Iban.setText("******"); 
                                EditIban.setText("Editar");
                                Iban.setEditable(false);
                                EditMorada.setEnabled(true);
                                EditCodpostal.setEnabled(true);
                                EditNome.setEnabled(true);
                                EditMetodoPag.setEnabled(true);
                                EditEmail.setEnabled(true);
                                EditTele.setEnabled(true);
                                EditPass.setEnabled(true);
                                Update.setEnabled(false);
                                iban = false;
                            } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                                Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } catch (NoSuchAlgorithmException | InvalidKeySpecException ex) {
                    Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
            if(EditMetodoPag.getText().equals("Anular")){
                if(BoxMetodoPag.getSelectedItem().equals(u.getMetodoPag(p.getMetodopag()))) showSameFieldMsg();
                else{
                    try {
                        u.updateMetodoPag(BoxMetodoPag.getSelectedItem().toString(), l.getUs());
                        showSuccessUpdate();
                        EditMetodoPag.setText("Editar");
                        BoxMetodoPag.setEnabled(false);
                        EditMorada.setEnabled(true);
                        EditCodpostal.setEnabled(true);
                        EditNome.setEnabled(true);
                        EditIban.setEnabled(true);
                        EditEmail.setEnabled(true);
                        EditTele.setEnabled(true);
                        EditPass.setEnabled(true);
                        Update.setEnabled(false);
                    } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                        Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else{
            if(EditMorada.getText().equals("Anular")){
                if(checkUpdate(Morada)) invalidUpdate();
                else{
                    if(checkSameField(Morada.getText(), p.getMorada())) showSameFieldMsg();
                    else{
                        try {
                            u.updateMorada(Morada.getText(), l.getUs());
                            showSuccessUpdate();
                            EditMorada.setText("Editar");
                            Morada.setEditable(false);
                            EditMetodoPag.setEnabled(true);
                            EditCodpostal.setEnabled(true);
                            EditNome.setEnabled(true);
                            EditIban.setEnabled(true);
                            EditEmail.setEnabled(true);
                            EditTele.setEnabled(true);
                            EditPass.setEnabled(true);
                            Update.setEnabled(false);
                        } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                            Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            else{
            if(EditTele.getText().equals("Anular")){
                try {
                    if(!tele || checkSameField(h.getHashData(Telemovel.getText()), p.getTelemovel())) showSameFieldMsg();
                    else{
                        if(checkUpdate(Telemovel) || !c.check_telemovel(Telemovel.getText())) invalidUpdate();
                        else{
                            try {
                                u.updateTelemovel(Telemovel.getText(), l.getUs());
                                showSuccessUpdate();
                                Telemovel.setText("******"); 
                                EditTele.setText("Editar");
                                Telemovel.setEditable(false);
                                EditMorada.setEnabled(true);
                                EditCodpostal.setEnabled(true);
                                EditNome.setEnabled(true);
                                EditIban.setEnabled(true);
                                EditEmail.setEnabled(true);
                                EditMetodoPag.setEnabled(true);
                                EditPass.setEnabled(true);
                                Update.setEnabled(false);
                                tele = false;
                            } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                                Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } catch (NoSuchAlgorithmException | InvalidKeySpecException ex) {
                    Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
            if(EditPass.getText().equals("Anular")){
                Color data = Pass.getForeground(); JTextField x = Pass;
                if(data == Color.red) JOptionPane.showMessageDialog(null, "Palavra-passe deve conter, pelo menos, "
                        + "8 caracteres", "Campo Obrigatório", JOptionPane.WARNING_MESSAGE);
                else{
                if(data == Color.yellow) JOptionPane.showMessageDialog(null, "Palavra-passe fraca. "
                        + "Deve conter, pelo menos, uma letra maiúscula e um caractere especial",
                        "Campo Obrigatório", JOptionPane.WARNING_MESSAGE);
                else{
                    try {
                        if(!pass || checkSameField(h.getHashData(x.getText()), p.getPass())) showSameFieldMsg();
                        else{
                            try {
                                u.updatePass(Pass.getText(), l.getUs());
                                showSuccessUpdate();
                                Pass.setText("******");
                                Pass.setForeground(Color.black);
                                EditPass.setText("Editar");
                                Pass.setEditable(false);
                                EditMorada.setEnabled(true);
                                EditCodpostal.setEnabled(true);
                                EditNome.setEnabled(true);
                                EditIban.setEnabled(true);
                                EditEmail.setEnabled(true);
                                EditTele.setEnabled(true);
                                EditMetodoPag.setEnabled(true);
                                Update.setEnabled(false);
                                pass = false;
                            } catch (NoSuchAlgorithmException | InvalidKeySpecException | SQLException ex) {
                                Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    } catch (NoSuchAlgorithmException | InvalidKeySpecException ex) {
                        Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                }
            }
            }
            }
            }
            }
            }
            }
            }
            u.getDadosPerfil(l.getUs(), p);
        } catch (SQLException | NoSuchAlgorithmException | InvalidKeySpecException ex) {
            Logger.getLogger(VerDados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void UpdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpdateKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) Update.doClick();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT) Logout.requestFocusInWindow();
    }//GEN-LAST:event_UpdateKeyPressed

    private void PassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PassKeyPressed
        if(Pass.isEditable()){
            JTextField passw = Pass; int score = c.password_strength(passw.getText());
            r.setColor(passw);
            if(score == 0) passw.setForeground(Color.red);
            if(score >= 2 && score <= 6) passw.setForeground(Color.yellow);
            if(score >= 8 && score <= 10) passw.setForeground(Color.green);
            pass = true;
        }
    }//GEN-LAST:event_PassKeyPressed

    private void EditNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditNomeActionPerformed
        if(!EditNome.getText().equals("Anular")){
            EditNome.setText("Anular");
            Nome.setEditable(true);
            EditMorada.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditEmail.setEnabled(false);
            EditIban.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditTele.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditNome.getText().equals("Anular")){
                EditNome.setText("Editar");
                Nome.setText(p.getNome());
                Nome.setBackground(Color.white);
                Nome.setEditable(false);
                EditMorada.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditEmail.setEnabled(true);
                EditIban.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditTele.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditNomeActionPerformed

    private void EditNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditNomeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditNome.doClick();
    }//GEN-LAST:event_EditNomeKeyPressed

    private void EditMoradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMoradaActionPerformed
        if(!EditMorada.getText().equals("Anular")){
            EditMorada.setText("Anular");
            Morada.setEditable(true);
            EditNome.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditEmail.setEnabled(false);
            EditIban.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditTele.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditMorada.getText().equals("Anular")){
                EditMorada.setText("Editar");
                Morada.setText(p.getMorada());
                Morada.setBackground(Color.white);
                Morada.setEditable(false);
                EditNome.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditEmail.setEnabled(true);
                EditIban.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditTele.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditMoradaActionPerformed

    private void EditMoradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditMoradaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditMorada.doClick();
    }//GEN-LAST:event_EditMoradaKeyPressed

    private void EditCodpostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCodpostalActionPerformed
        if(!EditCodpostal.getText().equals("Anular")){
            EditCodpostal.setText("Anular");
            CodPostal.setEditable(true);
            EditNome.setEnabled(false);
            EditMorada.setEnabled(false);
            EditEmail.setEnabled(false);
            EditIban.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditTele.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditCodpostal.getText().equals("Anular")){
                EditCodpostal.setText("Editar");
                CodPostal.setText(p.getCodPostal());
                CodPostal.setBackground(Color.white);
                CodPostal.setForeground(Color.black);
                CodPostal.setEditable(false);
                EditMorada.setEnabled(true);
                EditNome.setEnabled(true);
                EditEmail.setEnabled(true);
                EditIban.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditTele.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditCodpostalActionPerformed

    private void EditCodpostalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditCodpostalKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditCodpostal.doClick();
    }//GEN-LAST:event_EditCodpostalKeyPressed

    private void EditEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditEmailActionPerformed
        if(!EditEmail.getText().equals("Anular")){
            EditEmail.setText("Anular");
            Email.setEditable(true);
            EditNome.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditMorada.setEnabled(false);
            EditIban.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditTele.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditEmail.getText().equals("Anular")){
                EditEmail.setText("Editar");
                Email.setText(p.getEmail());
                Email.setBackground(Color.white);
                Email.setForeground(Color.black);
                Email.setEditable(false);
                EditMorada.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditNome.setEnabled(true);
                EditIban.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditTele.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditEmailActionPerformed

    private void EditEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditEmailKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditEmail.doClick();
    }//GEN-LAST:event_EditEmailKeyPressed

    private void EditIbanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditIbanActionPerformed
        if(!EditIban.getText().equals("Anular")){
            EditIban.setText("Anular");
            Iban.setEditable(true);
            EditNome.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditEmail.setEnabled(false);
            EditMorada.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditTele.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditIban.getText().equals("Anular")){
                EditIban.setText("Editar");
                Iban.setText("******");
                Iban.setBackground(Color.white);
                Iban.setForeground(Color.black);
                Iban.setEditable(false);
                EditMorada.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditEmail.setEnabled(true);
                EditNome.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditTele.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditIbanActionPerformed

    private void EditIbanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditIbanKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditIban.doClick();
    }//GEN-LAST:event_EditIbanKeyPressed

    private void EditMetodoPagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMetodoPagActionPerformed
        if(!EditMetodoPag.getText().equals("Anular")){
            EditMetodoPag.setText("Anular");
            BoxMetodoPag.setEnabled(true);
            EditNome.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditEmail.setEnabled(false);
            EditMorada.setEnabled(false);
            EditIban.setEnabled(false);
            EditTele.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditMetodoPag.getText().equals("Anular")){
                EditMetodoPag.setText("Editar");
                BoxMetodoPag.setSelectedItem(u.getMetodoPag(p.getMetodopag()));
                BoxMetodoPag.setEnabled(false);
                EditMorada.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditEmail.setEnabled(true);
                EditNome.setEnabled(true);
                EditIban.setEnabled(true);
                EditTele.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        } 
        
    }//GEN-LAST:event_EditMetodoPagActionPerformed

    private void EditMetodoPagKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditMetodoPagKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditMetodoPag.doClick();
    }//GEN-LAST:event_EditMetodoPagKeyPressed

    private void EditTeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditTeleActionPerformed
        if(!EditTele.getText().equals("Anular")){
            EditTele.setText("Anular");
            Telemovel.setEditable(true);
            EditNome.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditEmail.setEnabled(false);
            EditMorada.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditIban.setEnabled(false);
            EditPass.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditTele.getText().equals("Anular")){
                EditTele.setText("Editar");
                Telemovel.setText("******");
                Telemovel.setBackground(Color.white);
                Telemovel.setForeground(Color.black);
                Telemovel.setEditable(false);
                EditMorada.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditEmail.setEnabled(true);
                EditNome.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditIban.setEnabled(true);
                EditPass.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditTeleActionPerformed

    private void EditTeleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditTeleKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditTele.doClick();
    }//GEN-LAST:event_EditTeleKeyPressed

    private void EditPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPassActionPerformed
        if(!EditPass.getText().equals("Anular")){
            EditPass.setText("Anular");
            Pass.setEditable(true);
            EditNome.setEnabled(false);
            EditCodpostal.setEnabled(false);
            EditEmail.setEnabled(false);
            EditMorada.setEnabled(false);
            EditMetodoPag.setEnabled(false);
            EditTele.setEnabled(false);
            EditIban.setEnabled(false);
            Update.setEnabled(true);
        }
        else{
            if(EditPass.getText().equals("Anular")){
                EditPass.setText("Editar");
                Pass.setText("******");
                Pass.setBackground(Color.white);
                Pass.setForeground(Color.black);
                Pass.setEditable(false);
                EditMorada.setEnabled(true);
                EditCodpostal.setEnabled(true);
                EditEmail.setEnabled(true);
                EditNome.setEnabled(true);
                EditMetodoPag.setEnabled(true);
                EditTele.setEnabled(true);
                EditIban.setEnabled(true);
                Update.setEnabled(false);
            }
        }
    }//GEN-LAST:event_EditPassActionPerformed

    private void EditPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditPassKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) EditPass.doClick();
    }//GEN-LAST:event_EditPassKeyPressed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BoxMetodoPag;
    private javax.swing.JTextField CodPostal;
    private javax.swing.JTextField DataNasc;
    private javax.swing.JButton EditCodpostal;
    private javax.swing.JButton EditEmail;
    private javax.swing.JButton EditIban;
    private javax.swing.JButton EditMetodoPag;
    private javax.swing.JButton EditMorada;
    private javax.swing.JButton EditNome;
    private javax.swing.JButton EditPass;
    private javax.swing.JButton EditTele;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Iban;
    private javax.swing.JButton Logout;
    private javax.swing.JTextField Morada;
    private javax.swing.JTextField Nome;
    private javax.swing.JPasswordField Pass;
    private javax.swing.JButton Return;
    private javax.swing.JTextField Telemovel;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
